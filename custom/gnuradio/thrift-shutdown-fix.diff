diff --git a/lib/cpp/src/thrift/concurrency/ThreadManager.cpp b/lib/cpp/src/thrift/concurrency/ThreadManager.cpp
index 204d5dc..fa52c9b 100644
--- a/lib/cpp/src/thrift/concurrency/ThreadManager.cpp
+++ b/lib/cpp/src/thrift/concurrency/ThreadManager.cpp
@@ -429,6 +429,8 @@ void ThreadManager::Impl::removeWorker(size_t value) {
 
     workerMaxCount_ -= value;
 
+    shutdown_mutex_.unlock();
+
     if (idleCount_ < value) {
       for (size_t ix = 0; ix < idleCount_; ix++) {
         monitor_.notify();
diff --git a/lib/cpp/src/thrift/concurrency/ThreadManager.h b/lib/cpp/src/thrift/concurrency/ThreadManager.h
index 0fedc88..f837e78 100644
--- a/lib/cpp/src/thrift/concurrency/ThreadManager.h
+++ b/lib/cpp/src/thrift/concurrency/ThreadManager.h
@@ -24,6 +24,7 @@
 #include <thrift/cxxfunctional.h>
 #include <sys/types.h>
 #include <thrift/concurrency/Thread.h>
+#include <thrift/concurrency/Mutex.h>
 
 namespace apache { namespace thrift { namespace concurrency {
 
@@ -57,6 +58,7 @@ class ThreadManager {
   ThreadManager() {}
 
  public:
+  Mutex shutdown_mutex_;
   typedef apache::thrift::stdcxx::function<void(boost::shared_ptr<Runnable>)> ExpireCallback;
 
   virtual ~ThreadManager() {}
diff --git a/lib/cpp/src/thrift/server/TThreadPoolServer.cpp b/lib/cpp/src/thrift/server/TThreadPoolServer.cpp
index da33ec2..8e5277d 100644
--- a/lib/cpp/src/thrift/server/TThreadPoolServer.cpp
+++ b/lib/cpp/src/thrift/server/TThreadPoolServer.cpp
@@ -178,18 +178,26 @@ void TThreadPoolServer::serve() {
     }
   }
 
-  // If stopped manually, join the existing threads
-  if (stop_) {
-    try {
-      serverTransport_->close();
-      threadManager_->join();
-    } catch (TException &tx) {
-      string errStr = string("TThreadPoolServer: Exception shutting down: ") + tx.what();
-      GlobalOutput(errStr.c_str());
+  {
+    Guard g(threadManager_->shutdown_mutex_);
+    // If stopped manually, join the existing threads
+    if (stop_) {
+      try {
+        serverTransport_->close();
+        threadManager_->join();
+      } catch (TException& tx) {
+        string errStr = string("TThreadPoolServer: Exception shutting down: ") + tx.what();
+        GlobalOutput(errStr.c_str());
+      }
+      stop_ = false;
     }
-    stop_ = false;
   }
+}
 
+void TThreadPoolServer::stop() {
+    threadManager_->shutdown_mutex_.lock();
+    stop_ = true;
+    serverTransport_->interrupt();
 }
 
 int64_t TThreadPoolServer::getTimeout() const {
diff --git a/lib/cpp/src/thrift/server/TThreadPoolServer.h b/lib/cpp/src/thrift/server/TThreadPoolServer.h
index 8a1fc16..dea14f3 100644
--- a/lib/cpp/src/thrift/server/TThreadPoolServer.h
+++ b/lib/cpp/src/thrift/server/TThreadPoolServer.h
@@ -24,6 +24,7 @@
 #include <thrift/server/TServer.h>
 #include <thrift/transport/TServerTransport.h>
 
+
 #include <boost/shared_ptr.hpp>
 
 namespace apache { namespace thrift { namespace server {
@@ -110,10 +111,7 @@ class TThreadPoolServer : public TServer {
 
   virtual void setTimeout(int64_t value);
 
-  virtual void stop() {
-    stop_ = true;
-    serverTransport_->interrupt();
-  }
+  virtual void stop();
 
   virtual int64_t getTaskExpiration() const;
 
