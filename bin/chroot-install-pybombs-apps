#!/bin/sh
set -o nounset
#set -x #DEBUG

cd /root/live

. config/config-vars
. bin/chroot-functions.sh

# Create git cache repository if needed
if ! [ -f $GITCACHE/config ] ; then
    $PRINTINFO Initializing git cache repository...
    git init --bare gitcache/
fi

# Execute each fragment in config/pybombs.d
export LIVEUB_DIR=$LIVEUB_DIR
export ROOTFS_PREFIX=$ROOTFS_PREFIX
export ROOTFS_SRCDIR=$ROOTFS_SRCDIR

while read LINE ; do
    # Skip comments and whitespace
    if echo $LINE | grep -v -q ^[^#] ; then continue ; fi

    # Extract columnwise data
    COMP=$(echo $LINE | cut -f 1 -d ' ')
    REV=$(echo $LINE | cut -f 2 -d ' ')
    FILE=$(echo $LINE | cut -f 3 -d ' ')

    [ -f $ROOTFS_PREFIX/$FILE ] || {
        $PRINTINFO Installing component $COMP at revision $REV...

        # Check if remote repo needs adding to gitcache
        if ! git -C $GITCACHE remote | grep -q $COMP ; then
            $PRINTINFO Adding remote repository for $COMP to gitcache...
            REMOTE_URL=$(grep ^source: $ROOTFS_SRCDIR/pybombs/recipes/$COMP.lwr | cut -f 3- -d /)
            # Clone into temp dir to avoid long waits identifying "no common commits"
            TEMPDIR=$LIVEUB_DIR`mktemp -d`
            $PRINTINFO Cloning remote repository into tmpdir...
            git clone $REMOTE_URL $TEMPDIR
            # Now add this temp repo as remote to fetch from and update
            $PRINTINFO Adding temp repository into gitcache...
            git -C $GITCACHE remote add $COMP $TEMPDIR/
            git -C $GITCACHE fetch $COMP --tags
            # Finally, set the remote to the actual remote URL
            git -C $GITCACHE remote set-url $COMP $REMOTE_URL
            # And clean up
            rm -rf $TEMPDIR/
        fi

        $PRINTINFO Updating gitcache with latest commits from remote repo...
        git -C $GITCACHE remote update -p $COMP

        # Check for pre-installation actions
        [ -f config/pybombs.d/preinst.d/$COMP ] && {
            config/pybombs.d/preinst.d/$COMP || {
                $PRINTERROR Pre-installation for $COMP failed!
                exit 1
            }
        }

        # DOOO EEEET
        bin/do-pybombs-install $COMP $REV

        # Check for post-installation actions
        [ -f config/pybombs.d/postinst.d/$COMP ] && {
            config/pybombs.d/postinst.d/$COMP || {
                $PRINTERROR Post-installation for $COMP failed!
                exit 1
            }
        }
    }
done < config/pybombs.d/install.conf
